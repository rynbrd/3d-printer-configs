## Voron V2.700

[mcu]
serial: /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.1:1.0

[mcu z]
serial: /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.2:1.0

[virtual_sdcard]
path: ~/gcode

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 7000
max_accel_to_decel: 7000
max_z_velocity: 30
max_z_accel: 350
square_corner_velocity: 5.0

[pause_resume]

[input_shaper]
# Set max_accel and max_accel_to_decel to 7000 when testing.
#shaper_freq_x: 22.73
#shaper_freq_y: 53.76
shaper_freq_x: 38.61
shaper_freq_y: 55.25
shaper_type: mzv

## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"

[thermistor ntc_100k_3950_air]
temperature1: 20
resistance1: 125245
temperature2: 50
resistance2: 35900
temperature3: 80
resistance3: 12933

[temperature_sensor chamber]
sensor_type: ntc_100k_3950_air
sensor_pin: z:P0.23
min_temp: 0
max_temp: 70
gcode_id: chamber

[output_pin lights]
pin: P2.5
pwm: true
value: 0
cycle_time: 0.01

#####################################################################
# 	X/Y Stepper Settings
#####################################################################

[stepper_x]
##	Connected to X on mcu_xye (B Motor)
step_pin: P2.2
dir_pin: !P2.6
enable_pin: !P2.1
rotation_distance: 40
microsteps: 16
endstop_pin: !P1.29
position_min: -2
position_endstop: 252
position_max: 252
homing_speed: 70   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: P1.10
interpolate: True
run_current: 0.8
hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_y]
##	Connected to Y on mcu_xye (A Motor)
step_pin: P0.19
dir_pin: !P0.20
enable_pin: !P2.8
rotation_distance: 40
microsteps: 16
endstop_pin: !P1.28
position_min: -2
position_endstop: 256
position_max: 257
homing_speed: 70  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: P1.9
interpolate: True
run_current: 0.8
hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0
 
#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z MCU - In X Position
## Z0 Stepper - Front Left
[stepper_z]
step_pin: z:P2.2
dir_pin: !z:P2.6
enable_pin: !z:P2.1
rotation_distance: 10
microsteps: 16
endstop_pin: z:P1.27
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.141
position_max: 230
position_min: -10
homing_speed: 40.0
second_homing_speed: 5.0
homing_retract_dist: 3.0

[tmc2209 stepper_z]
uart_pin: z:P1.10
interpolate: true
run_current: 0.8
hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z MCU - In Y Position
##	Z1 Stepper - Rear Left
[stepper_z1]
step_pin: z:P0.19
dir_pin: z:P0.20
enable_pin: !z:P2.8
rotation_distance: 10
microsteps: 16

[tmc2209 stepper_z1]
uart_pin: z:P1.9
interpolate: true
run_current: 0.8
hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z MCU - In Z Position
##	Z2 Stepper - Rear Right
[stepper_z2]
step_pin: z:P0.22
dir_pin: !z:P2.11
enable_pin: !z:P0.21
rotation_distance: 10
microsteps: 16

[tmc2209 stepper_z2]
uart_pin: z:P1.8
interpolate: true
run_current: 0.8
hold_current: 0.80
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z MCU - In E0 Position
##	Z3 Stepper - Front Right
[stepper_z3]
step_pin: z:P2.13
dir_pin: z:P0.11
enable_pin: !z:P2.12
rotation_distance: 10
microsteps: 16

[tmc2209 stepper_z3]
uart_pin: z:P1.4
interpolate: true
run_current: 0.8
hold_current: 0.80
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
# 	Extruder
#####################################################################

#	E0 on MCU X/Y
[extruder]
step_pin: P2.13
dir_pin: !P0.11
enable_pin: !P2.12
rotation_distance: 7.7568
microsteps: 16
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: P2.7
sensor_type: ATC Semitec 104GT-2
sensor_pin: P0.24
min_temp: 10
max_temp: 270
max_power: 1.0
min_extrude_temp: 170
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
pressure_advance: 0
pressure_advance_smooth_time: 0.040

[tmc2209 extruder]
uart_pin: P1.4
interpolate: false
run_current: 0.5
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0

[firmware_retraction]
retract_length: 0.6
retract_speed: 80
unretract_speed: 80
unretract_extra_length: 0


#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
heater_pin: z:P2.3
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: z:P0.25
max_power: 0.6
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769
pwm_cycle_time: 0.01666

[verify_heater heater_bed]
heating_gain: 2
check_gain_time: 80
max_error: 200

#####################################################################
# 	Fan Control
#####################################################################

[heater_fan hotend_fan]
pin: P2.4
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 60.0
fan_speed: 0.80

[fan]
# Print Cooling Fan
pin: P2.3
kick_start_time: 0.5
off_below: 0.10

[heater_fan controller_fan]
# Controller Fan
pin: z:P2.4
kick_start_time: 0.5
heater: heater_bed
heater_temp: 45.0
fan_speed: 0.3

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 3600
gcode:
    SHUTDOWN

[force_move]
enable_force_move: true

[probe]
# Inductive or Microswitch probe. Not used for z height.
pin: ^z:P0.10
x_offset: 0
y_offset: 17.5
#z_offset: 2.225
speed: 20
samples: 5
samples_result: median
sample_retract_dist: 5
samples_tolerance: 0.05 # default 0.006; 1 step is 0.003125
samples_tolerance_retries: 10

[quad_gantry_level]
# Gantry corners relative to the bed.
gantry_corners:
    -60,-3
    310,327
# Points to probe for leveling.
# Must be in order of z motors.
points:
    20,3
    20,213
    230,213
    230,3

speed: 100
horizontal_move_z: 10 # default 20
max_adjust: 20
retry_tolerance: 0.0075 # 1 step is 0.003125
retries: 5

[bed_mesh]
speed: 250
horizontal_move_z: 5 # default 20
#probe_count: 7,7
#relative_reference_index: 24
#probe_count: 9,9
#relative_reference_index: 40
probe_count: 15,13
relative_reference_index: 98
# Magprobe settings:
mesh_min: 5, 17
mesh_max: 245,245
# Inductive probe settings:
#mesh_min: 10, 16
#mesh_max: 240,240
mesh_pps: 2
algorithm: bicubic
bicubic_tension: 0.5
move_check_distance: 5
split_delta_z: 0.01 # default 0.025

[safe_z_home]
home_xy_position: 179.5,256
speed: 50
z_hop: 5 
z_hop_speed: 50
move_to_previous: false

[z_calibration]
probe_nozzle_x: 179.5
probe_nozzle_y: 256
probe_switch_x: 175
probe_switch_y: 238.5
switch_offset: 0.5
max_deviation: 2.0
probing_first_fast: true
clearance: 10
speed: 250

#####################################################################
# 	Displays
#####################################################################

#[output_pin beeper]
#pin: z:P1.30

[display]
#	mini12864 LCD Display
lcd_type: uc1701
cs_pin: z:P1.18
a0_pin: z:P1.19
encoder_pins: ^z:P3.26,^z:P3.25
click_pin: ^!z:P0.28
contrast: 63

[display_status]

[neopixel fysetc_mini12864]
# Neopixel RGB in mini12864 display.
pin: z:P1.21
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
    SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=0
    SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
    SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------


#####################################################################
# 	Macros
#####################################################################

[gcode_macro LIGHTS]
variable_value: 0
variable_step: 0.05
variable_time: 800
gcode:
    {% set lights_value = params.VALUE|default(1)|float %}
    SET_PIN PIN=lights VALUE={ lights_value }
    SET_GCODE_VARIABLE MACRO=LIGHTS VARIABLE=value VALUE={ lights_value }

[gcode_macro LIGHTS_FADE]
gcode:
    {% set desired_value = '%0.3f'|format(params.VALUE|float)|float %}
    {% set current_value = '%0.3f'|format(printer["gcode_macro LIGHTS"].value|float)|float %}

    {% set step = printer["gcode_macro LIGHTS"].step|float %}
    {% set dwell = printer["gcode_macro LIGHTS"].time|float * step %}
    {% set step_count = (1.0 / step)|int %}

    {% set multi = 1 %}
    {% if current_value > desired_value %}
    {% set multi = -1 %}
    {% endif %}

    {% for n in range(step_count) %}
        {% if n*step <= (desired_value-current_value)|abs %}
            SET_PIN PIN=lights VALUE={ '%0.2f'|format(current_value+n*step*multi) }
            G4 P{ dwell }
        {% endif %}
    {% endfor %}
    SET_PIN PIN=lights VALUE={ desired_value }
    SET_GCODE_VARIABLE MACRO=LIGHTS VARIABLE=value VALUE={ desired_value }

[gcode_macro LIGHTS_ON]
gcode:
    LIGHTS_FADE VALUE=1

[gcode_macro LIGHTS_OUT]
gcode:
    LIGHTS_FADE VALUE=0

[gcode_macro HOME_IF_NEEDED]
gcode:
    {% if printer.toolhead.homed_axes != 'xyz' %}
    G28
    {% endif %}

[gcode_macro RESET_VELOCITY_LIMITS]
variable_max_velocity: 300
variable_max_accel: 7000
variable_max_accel_to_decel: 7000
variable_square_corner_velocity: 5
gcode:
    SET_VELOCITY_LIMIT VELOCITY={max_velocity} ACCEL={max_accel} ACCEL_TO_DECEL={max_accel_to_decel} SQUARE_CORNER_VELOCITY={square_corner_velocity}

[gcode_macro PREHEAT]
variable_extruder: 180
variable_bed: 110
gcode:
    LIGHTS_ON
    M104 S{extruder}
    M140 S{bed}
    HOME_IF_NEEDED
    G90
    G0 X125 Y125 Z10 F9000

[gcode_macro PROBE_CONFIG]
variable_safe_x: 160
variable_safe_y: 250
variable_safe_z: 10
variable_probe_x: -2
variable_probe_y: 255
variable_endstop_x: 179.5
variable_endstop_y: 256
variable_detach_delta: 35
variable_undock_delta: 15
variable_feedrate: 4000
gcode:

[gcode_macro PROBE_ATTACH]
gcode:
    {% set safe_y = printer["gcode_macro PROBE_CONFIG"].safe_y %}
    {% set safe_z = printer["gcode_macro PROBE_CONFIG"].safe_z %}
    {% set probe_x = printer["gcode_macro PROBE_CONFIG"].probe_x %}
    {% set probe_y = printer["gcode_macro PROBE_CONFIG"].probe_y %}
    {% set undock_y = probe_y - printer["gcode_macro PROBE_CONFIG"].undock_delta %}
    {% set feedrate = printer["gcode_macro PROBE_CONFIG"].feedrate %}

    G90 # absolute positioning

    # go to safe z height
    {% if printer.toolhead.position.z < safe_z %}
    G0 Z{safe_z} F9000
    G0 Y{undock_y}
    {% endif %}

    G0 X{probe_x} Y{undock_y} F9000 # go to dock
    G0 Y{probe_y} F{feedrate}       # attach probe
    G0 Y{undock_y} F{feedrate}      # undock probe
    
[gcode_macro PROBE_DETACH]
gcode:
    {% set safe_y = printer["gcode_macro PROBE_CONFIG"].safe_y %}
    {% set safe_z = printer["gcode_macro PROBE_CONFIG"].safe_z %}
    {% set probe_x = printer["gcode_macro PROBE_CONFIG"].probe_x %}
    {% set probe_y = printer["gcode_macro PROBE_CONFIG"].probe_y %}
    {% set detach_x = probe_x + printer["gcode_macro PROBE_CONFIG"].detach_delta %}
    {% set undock_y = probe_y - printer["gcode_macro PROBE_CONFIG"].undock_delta %}
    {% set feedrate = printer["gcode_macro PROBE_CONFIG"].feedrate %}

    G90 # absolute positioning

    # go to safe z height
    {% if printer.toolhead.position.z < safe_z %}
    G0 Z{safe_z} F9000
    G0 Y{undock_y}
    {% endif %}

    G0 X{probe_x} Y{undock_y} F9000 # go to dock
    G0 Y{probe_y} F{feedrate}       # dock probe
    G0 X{detach_x} F{feedrate}      # detach probe
    G0 Y{safe_y} F9000              # return to print area

[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing: BASE_QUAD_GANTRY_LEVEL
gcode:
    PROBE_ATTACH
    BASE_QUAD_GANTRY_LEVEL
    PROBE_DETACH

[gcode_macro G32]
gcode:
    SET_GCODE_OFFSET Z=0
    BED_MESH_CLEAR
    HOME_IF_NEEDED
    QUAD_GANTRY_LEVEL
    G28 Z

[gcode_macro CALIBRATE_Z]
rename_existing: BASE_CALIBRATE_Z
gcode:
    {% set endstop_x = printer["gcode_macro PROBE_CONFIG"].endstop_x %}
    {% set endstop_y = printer["gcode_macro PROBE_CONFIG"].endstop_y %}

    {% set z_offset = 0 %}
    {% if params.Z_OFFSET is defined %}
    {% set z_offset = params.Z_OFFSET %}
    {% endif %}

    {% set extruder_temp = 250 %}
    {% if params.EXTRUDER is defined %}
    {% set extruder_temp = params.EXTRUDER %}
    {% endif %}

    PURGE_SCRUB EXTRUDER={extruder_temp}    # scrub the nozzle for accurate z homing
    PROBE_ATTACH            # go pick up the probe
    G0 X{endstop_x} F9000   # fast forward homing move
    G0 Y{endstop_y} Z10     # fast forward homing move
    BASE_CALIBRATE_Z        # run z calibration
    PROBE_DETACH            # return the probe
    SET_GCODE_OFFSET Z_ADJUST={z_offset} MOVE=1 # apply the user requested z offset

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BASE_BED_MESH_CALIBRATE
gcode:
    PROBE_ATTACH
    BASE_BED_MESH_CALIBRATE
    PROBE_DETACH

[gcode_macro MAINTENANCE]
gcode:
    M104 S245
    HOME_IF_NEEDED
    G0 X125 Y0 Z100 F8000

[gcode_macro PURGE_CONFIG]
variable_bucket_x: 20
variable_bucket_y: 256
variable_brush_x: 30
variable_brush_y: 256
variable_brush_z: 0.5
variable_brush_width: 40
variable_prime: 2
variable_retract: 1
gcode:

[gcode_macro PURGE_PARK]
gcode:
    {% set bucket_x = printer["gcode_macro PURGE_CONFIG"].bucket_x %}
    {% set bucket_y = printer["gcode_macro PURGE_CONFIG"].bucket_y %}

    HOME_IF_NEEDED
    G90
    {% if params.Z is defined %}
    G0 X{bucket_x} Y{bucket_y} Z{params.Z} F9000
    {% else %}
    G0 X{bucket_x} Y{bucket_y} F9000
    {% endif %}

[gcode_macro PURGE_SCRUB]
# scrub the nozzle and home to ensure accurate Z height
gcode:
    {% set brush_x = printer["gcode_macro PURGE_CONFIG"].brush_x %}
    {% set brush_y = printer["gcode_macro PURGE_CONFIG"].brush_y %}
    {% set brush_z = printer["gcode_macro PURGE_CONFIG"].brush_z %}
    {% set brush_width = printer["gcode_macro PURGE_CONFIG"].brush_width %}
    {% set brush_opposite_x = brush_x + brush_width %}
    {% set safe_y = printer["gcode_macro PROBE_CONFIG"].safe_y %}
    {% set feedrate = 6000 %}
    {% set prime = printer["gcode_macro PURGE_CONFIG"].prime %}
    {% set retract = printer["gcode_macro PURGE_CONFIG"].retract %}

    {% if params.EXTRUDER is defined %}
    {% set extruder_temp = params.EXTRUDER %}
    {% else %}
    {% set extruder_temp = 245 %}
    {% endif %}
    
    M104 S{extruder_temp}   # set purge temp
    G90                     # absolute positioning

    PURGE_PARK Z=5
    M109 S{extruder_temp}               # wait for clean temp
    G92 E0                              # reset extruder
    G1 E{prime} F1000                   # do a short purge to prime nozzle
    G0 X{brush_x} Y{safe_y} Z{brush_z} F{feedrate}  # prepare to scrub
    G0 Y{brush_y} Z{brush_z}            # prepare to scrub
    G0 X{brush_opposite_x}              # scrub one way
    G0 X{brush_x}                       # then the other right
    G0 X{brush_opposite_x}              # back again
    G0 X{brush_x}                       # then again
    G1 E-{retract} F3600                # retract to avoid oozing

[gcode_macro PRINT_START]
# Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    {% set z_offset = 0 %}
    {% if params.Z_OFFSET is defined %}
    {% set z_offset = params.Z_OFFSET %}
    {% endif %}

    # start heaters
    M104 S{params.EXTRUDER}
    M140 S{params.BED}

    # turn on the lights
    LIGHTS_ON

    # home if necessary
    HOME_IF_NEEDED

    # clear previous kinematics
    BED_MESH_CLEAR
    SET_GCODE_OFFSET Z=0 MOVE=1
    SET_PRESSURE_ADVANCE ADVANCE=0 SMOOTH_TIME=0.040

    # level the gantry
    QUAD_GANTRY_LEVEL
    G28 Z

    # calibrate z height and park
    CALIBRATE_Z EXTRUDER={params.EXTRUDER} Z_OFFSET={z_offset}
    PURGE_PARK

    # load and echo calibration
    {% if params.MESH is defined %}
    BED_MESH_PROFILE LOAD={params.MESH}
    { action_respond_info("Loading bed mesh " + params.MESH + ".") }
    {% endif %}
    BED_MESH_OUTPUT PGP=0
    GET_POSITION
    
    # park wait for heaters
    M109 S{params.EXTRUDER}
    M190 S{params.BED}
    
    # Reset velocity limits.
    RESET_VELOCITY_LIMITS

[gcode_macro PRINT_END]
# Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    {% set retract = printer["gcode_macro PURGE_CONFIG"].retract %}

    # Get Boundaries
    {% set max_x = printer.toolhead.axis_maximum.x|float %}
    {% set max_y = printer.toolhead.axis_maximum.y|float %}
    {% set max_z = printer.toolhead.axis_maximum.z|float %}

    # Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20.0) %}
      {% set jog_x = 20.0 %}
    {% else %}
      {% set jog_x = -20.0 %}
    {% endif %}
    {% if printer.toolhead.position.y < (max_y - 20.0) %}
      {% set jog_y = 20.0 %}
    {% else %}
      {% set jog_y = -20.0 %}
    {% endif %}
    {% if printer.toolhead.position.z < (max_z - 2.0) %}
      {% set jog_z = 2.0 %}
    {% else %}
      {% set jog_z = max_z - printer.toolhead.position.z %}
    {% endif %}
    { action_respond_info("Moving nozzle (" + jog_z|string + ", " + jog_y|string + ", " + jog_z|string + ").") }

    # Find a safe Z to park at.
    {% set park_x = printer["gcode_macro PROBE_CONFIG"].safe_x %}
    {% set park_y = printer["gcode_macro PROBE_CONFIG"].safe_y %}
    {% if printer.toolhead.position.z < (max_z - 20.0) %}
    {% set park_z = printer.toolhead.position.z | float + 20.0 %}
    {% else %}
    {% set park_z = printer.toolhead.position.z %}
    {% endif %}

    G91                             # relative positioning
    G0 X{jog_x} Y{jog_y} Z{jog_z} F20000    # move nozzle to remove stringing
    G90                             # absolute positioning
    PURGE_PARK Z={park_z}           # park the nozzle out of the way
    G92 E0                          # zero she extruder
    G1 E-{retract} F3600            # retract filament
    M400                            # wait for buffer to clear
    M107                            # ensure part cooling fan is off
    BED_MESH_CLEAR
    SET_GCODE_OFFSET Z=0
    SET_PRESSURE_ADVANCE ADVANCE=0 SMOOTH_TIME=0.040
    TURN_OFF_HEATERS    

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
default_parameter_X: 160
default_parameter_Y: 256
default_parameter_Z: 20
default_parameter_E: 2
gcode:
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{E} F2100
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
default_parameter_E: 3      #edit to your retract length
gcode:
    G91
    G1 E{E} F2100
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

[gcode_macro SHUTDOWN]
variable_park_x: 125
variable_park_y: 0
gcode:
    # Move Z up a safe distance so the nozzle doesn't sag into the bed or print.
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% if printer.toolhead.position.z < (max_z - 20.0) %}
    {% set park_z = printer.toolhead.position.z | float + 20.0 %}
    {% else %}
    {% set park_z = printer.toolhead.position.z %}
    {% endif %}

    TURN_OFF_HEATERS
    G0 X{park_x} Y{park_y} Z{park_z} F9000
    M84
    LIGHTS_OUT


# Load menu configuration.
#[include menu.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 37.724
#*# pid_ki = 1.324
#*# pid_kd = 268.781
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 29.191
#*# pid_ki = 2.070
#*# pid_kd = 102.898
#*#
#*# [stepper_z]
#*# position_endstop = -0.165
#*#
#*# [probe]
#*# z_offset = 2.225
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.071875, 0.078125, 0.075000, 0.065625, 0.062500, 0.050000, 0.053125, 0.056250, 0.062500, 0.062500, 0.071875, 0.068750, 0.075000, 0.075000, 0.081250
#*# 	  0.081250, 0.081250, 0.068750, 0.065625, 0.065625, 0.056250, 0.056250, 0.059375, 0.062500, 0.059375, 0.071875, 0.062500, 0.071875, 0.075000, 0.081250
#*# 	  0.062500, 0.065625, 0.059375, 0.053125, 0.053125, 0.040625, 0.040625, 0.037500, 0.043750, 0.050000, 0.062500, 0.053125, 0.056250, 0.068750, 0.071875
#*# 	  0.050000, 0.062500, 0.040625, 0.034375, 0.034375, 0.025000, 0.025000, 0.025000, 0.025000, 0.028125, 0.034375, 0.028125, 0.037500, 0.053125, 0.056250
#*# 	  0.040625, 0.050000, 0.034375, 0.034375, 0.034375, 0.018750, 0.018750, 0.015625, 0.015625, 0.018750, 0.034375, 0.018750, 0.031250, 0.043750, 0.043750
#*# 	  0.031250, 0.034375, 0.028125, 0.021875, 0.021875, 0.009375, 0.006250, 0.006250, 0.009375, 0.012500, 0.021875, 0.012500, 0.025000, 0.028125, 0.037500
#*# 	  0.021875, 0.025000, 0.018750, 0.012500, 0.009375, -0.003125, -0.003125, -0.003125, 0.000000, 0.003125, 0.012500, 0.003125, 0.015625, 0.021875, 0.028125
#*# 	  0.028125, 0.028125, 0.018750, 0.012500, 0.009375, 0.000000, -0.006250, -0.003125, 0.000000, 0.000000, 0.012500, 0.006250, 0.018750, 0.021875, 0.037500
#*# 	  0.040625, 0.037500, 0.025000, 0.015625, 0.012500, 0.003125, 0.003125, 0.000000, 0.006250, 0.006250, 0.018750, 0.012500, 0.028125, 0.031250, 0.040625
#*# 	  0.040625, 0.046875, 0.034375, 0.021875, 0.018750, 0.006250, 0.009375, 0.006250, 0.006250, 0.009375, 0.025000, 0.018750, 0.034375, 0.043750, 0.046875
#*# 	  0.065625, 0.075000, 0.056250, 0.046875, 0.043750, 0.034375, 0.028125, 0.025000, 0.031250, 0.034375, 0.053125, 0.046875, 0.056250, 0.075000, 0.068750
#*# 	  0.078125, 0.081250, 0.071875, 0.062500, 0.056250, 0.040625, 0.037500, 0.034375, 0.040625, 0.050000, 0.065625, 0.059375, 0.068750, 0.075000, 0.090625
#*# 	  0.100000, 0.096875, 0.084375, 0.068750, 0.068750, 0.053125, 0.053125, 0.046875, 0.059375, 0.062500, 0.071875, 0.065625, 0.078125, 0.078125, 0.096875
#*# tension = 0.5
#*# min_x = 5.0
#*# algo = bicubic
#*# y_count = 13
#*# mesh_y_pps = 2
#*# min_y = 17.0
#*# x_count = 15
#*# max_y = 245.0
#*# mesh_x_pps = 2
#*# max_x = 244.96
